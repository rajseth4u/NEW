Determining if the IP_DONTFRAG exist failed with the following output:
Change Dir: /home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_bbd35/fast"
/usr/bin/make -f CMakeFiles/cmTC_bbd35.dir/build.make CMakeFiles/cmTC_bbd35.dir/build
make[1]: Entering directory '/home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_bbd35.dir/CheckSymbolExists.c.o
/usr/bin/cc   -DLSQUIC_DEBUG_NEXT_ADV_TICK=1 -Wall -Wextra -Wno-unused-parameter -fno-omit-frame-pointer -Wno-implicit-fallthrough -Wno-missing-field-initializers -O0 -g3 -Werror     -o CMakeFiles/cmTC_bbd35.dir/CheckSymbolExists.c.o   -c /home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘IP_DONTFRAG’ undeclared (first use in this function); did you mean ‘IPV6_DONTFRAG’?
   return ((int*)(&IP_DONTFRAG))[argc];
                   ^~~~~~~~~~~
                   IPV6_DONTFRAG
/home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
/home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp/CheckSymbolExists.c:4:14: error: parameter ‘argc’ set but not used [-Werror=unused-but-set-parameter]
 int main(int argc, char** argv)
              ^~~~
cc1: all warnings being treated as errors
CMakeFiles/cmTC_bbd35.dir/build.make:65: recipe for target 'CMakeFiles/cmTC_bbd35.dir/CheckSymbolExists.c.o' failed
make[1]: *** [CMakeFiles/cmTC_bbd35.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_bbd35/fast' failed
make: *** [cmTC_bbd35/fast] Error 2

File /home/aahan/LSQUIC-GIT-DEMO/lsquic/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <netinet/in.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef IP_DONTFRAG
  return ((int*)(&IP_DONTFRAG))[argc];
#else
  (void)argc;
  return 0;
#endif
}

